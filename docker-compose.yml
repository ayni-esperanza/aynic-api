services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USERNAME} -d ${DB_DATABASE}']
      interval: 5s
      timeout: 3s
      retries: 10
    restart: unless-stopped

  clamav:
    image: clamav/clamav:1.3.0
    restart: unless-stopped
    volumes:
      - clamav_db:/var/lib/clamav
    environment:
      - CLAMAV_NO_FRESHCLAM=false
    healthcheck:
      test:
        [
          'CMD',
          'sh',
          '-c',
          "printf 'PING\n' | nc -w 2 127.0.0.1 3310 | grep -q PONG",
        ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 120s

  api:
    build: .
    ports:
      - '3001:3000'
    depends_on:
      postgres:
        condition: service_healthy
      clamav:
        condition: service_healthy
    env_file:
      - .env
    environment:
      # overrides dentro de docker
      DB_HOST: postgres
      NODE_ENV: production
      PORT: 3000

      # compatibilidad nombres R2
      R2_BUCKET: ${R2_BUCKET_NAME}
      # endpoint R2 (ACCOUNT_ID del .env)
      R2_ENDPOINT: https://${R2_ACCOUNT_ID}.r2.cloudflarestorage.com

      # Config de ClamAV
      CLAMAV_HOST: clamav
      CLAMAV_PORT: 3310
      CLAMAV_TIMEOUT_MS: ${CLAMAV_TIMEOUT_MS}
      UPLOAD_MAX_MB: ${UPLOAD_MAX_MB}
    restart: unless-stopped

volumes:
  postgres_data:
  clamav_db:
